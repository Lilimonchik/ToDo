@model ToDo.Models.TaskModel

@{
    ViewData["Title"] = "Edit";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <h1 class="card-header text-center">Edit Task</h1>
                <div class="card-body">
                    <form asp-action="Edit">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Id" />

                        <div class="form-group">
                            <label asp-for="Title" class="control-label">Task Title</label>
                            <input asp-for="Title" class="form-control" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>

                        <div class="form-group form-check">
                            <input class="form-check-input" asp-for="IsDone" />
                            <label class="form-check-label" for="IsDone">@Html.DisplayNameFor(model => model.IsDone)</label>
                        </div>

                        <div class="form-group text-center">
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
                <div class="card-footer text-center">
                    <a asp-action="Index" class="btn btn-secondary">Back to Task List</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
